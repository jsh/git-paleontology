#!/bin/bash -eux

gbin=~/git
PATH=$gbin:$PATH

if type -p init-db > /dev/null; then
  git-init-db() {
    init-db "$@"
  }
fi

if type -p update-cache > /dev/null; then
  git-update-cache() {
    update-cache "$@"
  }
fi

if type -p cat-file > /dev/null; then
  git-cat-file() {
    cat-file "$@"
  }
fi

if type -p diff-files > /dev/null; then
  git-diff-files() {
    diff-files "$@"
  }
elif type -p show-diff > /dev/null; then
  git-diff-files() {
    show-diff "$@"
  }
fi


if type -p write-tree > /dev/null; then
  git-write-tree() {
    write-tree "$@"
  }
fi

if type -p commit-tree > /dev/null; then
  git-commit-tree() {
    commit-tree "$@"
  }
fi

blob-sha1() {
 cd $repo/objects
 find . -type f | tr -d './'
 cd ~-
}

cd /tmp
[ -d test ] && rm -rf test
mkdir test
cd $_

git-init-db
if [ -d .dircache ]; then
  repo=.dircache
else
  repo=.git
fi

echo 'echo hello, world' > hello; chmod +x hello
git-update-cache --add hello

if git-cat-file --help |& fgrep -q -- '-t '; then
  blob_sha1=$(blob-sha1)
  git-cat-file -t $blob_sha1
  git-cat-file "blob" $blob_sha1
  #git-cat-file $blob_sha1
fi

#echo 'echo hello, git' > hello
#git-diff-files -p hello # earlier is show-diff
#git-diff-files hello
git-write-tree
tree $repo
echo "Initial commit" | git-commit-tree $(git-write-tree) > $repo/HEAD

